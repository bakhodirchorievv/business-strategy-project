import{r,j as a}from"./index-wxwaQo9k.js";import{N as K,A as P}from"./NavBar-BhZpsW7d.js";import{c as Q,o as V,C as X,d as i,g as Y,a as k,r as d,u as A,b as $,e as Z,f as m,h as _,s as u,i as y,j as p}from"./ClipLoader-D5fKPzQR.js";const se=()=>{const[M,F]=r.useState([]),[h,D]=r.useState(""),[f,I]=r.useState(""),[O,v]=r.useState(""),[U,C]=r.useState(""),[g,S]=r.useState(null),[x,R]=r.useState(null),[j,E]=r.useState(null),w=r.useRef(null),b=r.useRef(null),L=Q(i,"OurTeams"),[N,l]=r.useState(!0),o=async()=>{l(!0);try{const t=(await Y(L)).docs.map(s=>({...s.data(),id:s.id}));F(t),l(!1)}catch(e){console.error(e),l(!1)}};r.useEffect(()=>{o();const e=V(k,t=>{S(t?t.email:null)});return()=>e()},[]);const W=async()=>{var e,t;if(x&&f&&h){l(!0);const s=`${Date.now()}-${x.name}`,n=d(u,`images/${s}`);await A(n,x);const c=await $(n);try{await Z(L,{title:h,desc:f,imageUrl:c,userId:(t=(e=k)==null?void 0:e.currentUser)==null?void 0:t.uid}),o(),D(""),I(""),R(null),w.current&&(w.current.value=""),l(!1)}catch(T){console.error(T),l(!1)}}else console.error("Something is not selected (image or title or desc)")},q=async(e,t)=>{try{const s=m(i,"OurTeams",e);if(await _(s),t){const n=d(u,t);try{await y(n),console.log("Image deleted successfully")}catch(c){console.error("Error deleting image: ",c)}}o(),console.log("OurTeam and image deleted")}catch(s){console.error("Error deleting OurTeam or image: ",s)}},B=async e=>{try{const t=m(i,"OurTeams",e);await p(t,{title:U}),o(),C(""),console.log("OurTeam updated")}catch(t){console.error("while updating title",t)}},z=async(e,t)=>{if(j)try{const s=`${Date.now()}-${j.name}`,n=d(u,`images/${s}`);await A(n,j);const c=await $(n),T=m(i,"OurTeams",e);if(t){const H=d(u,t);await y(H)}await p(T,{imageUrl:c}),o(),E(null),b.current&&(b.current.value=""),console.log("Image updated")}catch(s){console.error("Error updating image: ",s)}else console.error("No image selected for update")},J=async(e,t)=>{const s=d(u,t);try{await y(s);const n=m(i,"OurTeams",e);await p(n,{imageUrl:""}),o(),console.log("Image deleted")}catch(n){console.error("Error deleting image: ",n)}},G=async e=>{try{const t=m(i,"OurTeams",e);await p(t,{desc:O}),o(),v(""),console.log("OurTeam date updated")}catch(t){console.error("while updating release date",t)}};return a.jsxs("div",{className:"OurTeam-admin-wrapper",children:[g&&a.jsx(K,{}),a.jsxs("div",{className:"right-side-wrapper",children:[a.jsx(P,{}),g&&a.jsxs("div",{className:"controlAuthWrapper",children:[a.jsx("h2",{className:"addOurTeamTitle",children:"Add New Team Member"}),a.jsx("input",{className:"admin-input",type:"text",placeholder:"Team Member Name...",value:h,onChange:e=>D(e.target.value)}),a.jsx("input",{className:"admin-input",type:"text",placeholder:"Team Member job...",value:f,onChange:e=>I(e.target.value)}),a.jsx("input",{className:"admin-input",type:"file",ref:w,onChange:e=>R(e.target.files?e.target.files[0]:null)}),a.jsx("button",{className:"admin-btn",onClick:W,disabled:N,children:"Submit Team Member"})]}),g&&(N?a.jsx("div",{className:"loading-indicator",children:a.jsx(X,{size:50,color:"#eee",loading:N})}):a.jsx("div",{className:"controlDataWrapper",children:M.map(e=>a.jsx("div",{className:"OurTeamItemWrapperFire",children:g&&a.jsxs(a.Fragment,{children:[a.jsx("h1",{style:{color:"white"},children:e.title}),a.jsx("p",{children:e.desc}),e.imageUrl&&a.jsx("img",{className:"OurTeamImgFire",src:e.imageUrl,alt:e.title,width:"500"}),a.jsx("button",{className:"admin-btn",onClick:()=>q(e.id,e.imageUrl),children:"Delete Team Member"}),a.jsx("br",{}),a.jsx("input",{className:"admin-input",onChange:t=>C(t.target.value),type:"text",value:U,placeholder:"new title..."}),a.jsx("button",{className:"admin-btn",onClick:()=>B(e.id),children:"Update Name"}),a.jsx("br",{}),a.jsx("input",{className:"admin-input",type:"file",ref:b,onChange:t=>E(t.target.files?t.target.files[0]:null)}),a.jsx("button",{className:"admin-btn",onClick:()=>z(e.id,e.imageUrl),children:"Update Image"}),a.jsx("br",{}),a.jsx("button",{className:"admin-btn",onClick:()=>J(e.id,e.imageUrl),children:"Delete Image"}),a.jsx("br",{}),a.jsx("input",{className:"admin-input",type:"text",onChange:t=>v(t.target.value),value:O,placeholder:"new desc..."}),a.jsx("button",{className:"admin-btn",onClick:()=>G(e.id),children:"Update Job"})]})},e.id))}))]})]})};export{se as default};
